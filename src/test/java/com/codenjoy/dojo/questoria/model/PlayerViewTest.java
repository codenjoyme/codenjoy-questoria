package com.codenjoy.dojo.questoria.model;

import org.junit.Test;

import java.util.Arrays;

import static junit.framework.Assert.assertEquals;

public class PlayerViewTest {


    public static void fill(char[][] m, char с) {
        for (int x = 0; x < m.length; x++) {
            Arrays.fill(m[x], с);
        }
    }

    @Test
    public void testLargeView() throws Exception {
        verifyView(41,
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?       ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?               ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                   ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                   ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                       ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                       ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                       ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                   ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?                   ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?               ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?       ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n" +
                "? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? \n");
    }

    @Test
    public void testSmallView() throws Exception {
        verifyView(11,
                "? ? ? ?       ? ? ? ? \n" +
                "? ?               ? ? \n" +
                "?                   ? \n" +
                "?                   ? \n" +
                "                      \n" +
                "                      \n" +
                "                      \n" +
                "?                   ? \n" +
                "?                   ? \n" +
                "? ?               ? ? \n" +
                "? ? ? ?       ? ? ? ? \n");
    }

    private void verifyView(final int size, String expected) throws Exception {
        final PlayerView view = new PlayerView(size);
        final StringBuffer result = new StringBuffer();

        view.moveMeTo(new PointImpl(size, size));
        view.see(new PointImpl(size, size), size*2, size*2, new Apply() {
            @Override
            public void xy(int x, int y, boolean canSee, boolean isWall) {
                if (canSee) {
                    result.append(' ');
                } else {
                    result.append('?');
                }
                result.append(" ");

                boolean endLine = (x - size) == view.radius();
                if (endLine) {
                    result.append('\n');
                }
            }
        });

        assertEquals(expected, result.toString());
    }

}
