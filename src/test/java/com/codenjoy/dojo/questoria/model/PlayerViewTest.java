package com.codenjoy.dojo.questoria.model;

/*-
 * #%L
 * Codenjoy - it's a dojo-like platform from developers to developers.
 * %%
 * Copyright (C) 2012 - 2022 Codenjoy
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

import org.junit.Test;

import static com.codenjoy.dojo.services.PointImpl.pt;
import static junit.framework.Assert.assertEquals;

public class PlayerViewTest {

    @Test
    public void testLargeView() {
        verifyView(41,
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "???????????????????   ???????????????????\n" +
                "?????????????????       ?????????????????\n" +
                "????????????????         ????????????????\n" +
                "????????????????         ????????????????\n" +
                "???????????????           ???????????????\n" +
                "???????????????           ???????????????\n" +
                "???????????????           ???????????????\n" +
                "????????????????         ????????????????\n" +
                "????????????????         ????????????????\n" +
                "?????????????????       ?????????????????\n" +
                "???????????????????   ???????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n" +
                "?????????????????????????????????????????\n");
    }

    @Test
    public void testSmallView() {
        verifyView(11,
                "????   ????\n" +
                "??       ??\n" +
                "?         ?\n" +
                "?         ?\n" +
                "           \n" +
                "           \n" +
                "           \n" +
                "?         ?\n" +
                "?         ?\n" +
                "??       ??\n" +
                "????   ????\n");
    }

    private void verifyView(int size, String expected) {
        PlayerView view = new PlayerView(size);
        StringBuffer result = new StringBuffer();

        view.moveMeTo(pt(size, size));
        view.see(pt(size, size), size, size, (x, y, canSee, isWall) -> {
            if (canSee) {
                result.append(' ');
            } else {
                result.append('?');
            }

            boolean endLine = (x - size) == view.radius();
            if (endLine) {
                result.append('\n');
            }
        });

        assertEquals(expected, result.toString());
    }
}